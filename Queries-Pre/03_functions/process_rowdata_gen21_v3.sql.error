CREATE OR REPLACE FUNCTION dev.process_rowdata_gen21_v3(as_month text, as_year text)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
   	lv_category  	text := '';
	as_channel 		text := 'TV7'; 
	as_tx 			text := 'INA';
--	rowdata			row_data_recon_sales_temp%ROWTYPE;
	rowdata			record;
	c_data			CURSOR FOR (
		select
			records."month",
			records."year",
			records.contract,
			records.ref_po_num,
			records.camp,
			records.order_no,
			records.agency,
			records.advertiser,
			records.brand,
			records.ae,
			records.group1,
			records.start1,
			records.end1,
			records.type1,
			records.gross,
			records.disc,
			records.comm,
			records.enter_date,
			records.budget_spot,
			records.bundling,
			records.cashback_amount,
			records.total_invoice,
			records."cost",
			records.nett
		from dev.dblink(
			'dbname=integration port=5432 host=172.16.123.121 user=postgres password=initrans7'::text, 
			'
--				with 
--				cte_MST_SLOT_TYPE as (
--					SELECT    
--						vc_time_from,
--						vc_time_until,
--						DT_DATE_FROM,
--						DT_DATE_UNTIL,
--						SUBSTR (MST_SLOT_TYPE.VC_TIME_FROM, 1, 4) || ''-'' || SUBSTR (MST_SLOT_TYPE.VC_TIME_UNTIL, 1, 4) as "time",
--						VC_DESCRIPTION
--					FROM 
--						gen21.MST_SLOT_TYPE
--				)
				select
					date_part(''month'', TM1.mo_book_date)::int												AS "month",
					date_part(''year'', TM1.mo_book_date)::int 												AS "year",	
					TM1.PO_NUMBER																			AS contract,	
--					TM1.mo_no || ''/'' || TM1.po_number														AS kontrak,
					SR1.ref_po_num																			AS ref_po_num,			
					TM1.mo_no																				AS camp,
					SR1.JOB_ID																				AS order_no,
					(
						SELECT 
							MT_AGEN.AGEN_COM_NAME			
						FROM 
							gen21.MT_AGEN			
						WHERE 
							MT_AGEN.AGEN_CODE = SR1.AGEN_CODE
					)																						AS agency,
					(
						SELECT 
							mt_client.client_com_name			
						FROM 
							gen21.mt_client		
						WHERE 
							mt_client.client_code = SR1.client_code
					)																						AS advertiser,
					(
						SELECT 
							MT_PROD.PROD_NAME			
						FROM 
							gen21.MT_PROD			
						WHERE 
							MT_PROD.prod_code = MP1.PROD_CODE
					)																						AS brand,
					(
						SELECT 
							mt_salesman.sales_name			
						FROM 
							gen21.mt_salesman			
						WHERE 
							mt_salesman.sales_code = SR1.sales_code
					) 																						AS ae,
					(
						SELECT 
							SALESG_NAME			
						FROM 
							gen21.mt_salesmang			
						WHERE 
							mt_salesmang.SALESG_CODE = gen21.get_salesman_group(									/**/
								SR1.sales_code,			
								SR1.r_date,			
								TM1.mo_book_date
							)
					)																						AS group1,
					SR1.booking_period_from																	AS start1,	
					SR1.booking_period_to																	AS end1,
					(
						SELECT 
							PACK_NAME			
						FROM 
							gen21.ME_PACKAGE			
						WHERE 
							PACK_CODE = TM1.PO_TYPE
					)																						AS type1,
					TM1.rate_price_home																		AS gross,
					SR1.agency_discount																		as disc,
					SR1.agency_commission																	as comm,
					(
						SELECT 
							TM.ENTRYDATE			
						FROM 
							gen21.tt_mo TM			
						WHERE     
							TM.MO_NO = TM1.MO_NO			
							AND TM.MO_EXT_NO = TM1.PO_NUMBER			
							AND TM.CLIENT_CODE = SR1.CLIENT_CODE			
							AND TM.AGEN_CODE = SR1.AGEN_CODE
					)																						AS enter_date,	
					TOTAL_SPOTS																				AS budget_spot,
					COALESCE(
						(
							SELECT 
								ST_RESERVATION_SPS_BUND_SUMM.NETT			
							FROM 
								gen21.ST_RESERVATION_SPS_BUND_SUMM			
							WHERE 
								RID_SR = SR1.ROW_ID AND SPS_BUND_FLAG = ''B''
						),			
						0
					)																						AS bundling,
					COALESCE(SR1.CASBACK_AMOUNT, 0)															AS cashback_amount,
					COALESCE(			
						SR1.TOTAL_INVOICE,			
						(
							SELECT 
								SUM (mo_dpp_home)			
							FROM 
								gen21.tt_mo1			
							WHERE     
								tt_mo1.mo_no = SR1.mo_no			
								AND tt_mo1.po_number = SR1.po_number			
								AND tt_mo1.mo_book_status = ''2''			
								AND tt_mo1.bonus_taken = ''N''
						)
					)																						AS total_invoice,

					TM1.po_disc_home																		as "cost",		
					COALESCE(TM1.MO_DPP_HOME, 0)															AS nett
				FROM 
					gen21.tt_mo1                  		TM1
					join gen21.mg_channel         		MCN 	on	TM1.channel_code = MCN.channel_code
					join gen21.st_reservations    		SR1 	on	SR1.ROW_ID = TM1.ROW_ID_RES	
					join gen21.st_reservation_matrix1 	SRM1 	on 	SRM1.ROW_ID = TM1.ROW_ID_MATRIX1
					left join gen21.mp_film           	MF		on 	TM1.film_poc = MF.film_poc 
																and TM1.row_id_poc = MF.row_id
					left join gen21.tp_cbs_dps1       	TCD1	on	TM1.row_id_slot = TCD1.row_id
					left join gen21.mt_prod1          	MP1		on	TM1.prod_code = MP1.prod_code
																and TM1.prod_version = MP1.prod_version
					left join gen21.ST_PKG_INT_HDR   	SPKG	on	SR1.rid_pkg_ext = SPKG.row_id			
				WHERE     
					TO_CHAR (TM1.MO_BOOK_DATE, ''mm'') = ''' || as_month || '''/*:as_month*/				
					AND TO_CHAR (TM1.MO_BOOK_DATE, ''yyyy'') = ''' || as_year || '''/*:as_year*/				
					AND TM1.channel_code = ''TV7''/*:as_channel*/				
					AND TM1.tx_code = ''INA''/*:as_tx*/
					AND TM1.MO_BOOK_STATUS <> ''5'';
			'::text
		) records(
			"month" integer,
			"year" integer,
			contract text,
			ref_po_num character varying(50),
			camp character varying(20),
			order_no character varying(100),
			agency character varying(60),
			advertiser character varying(40),
			brand character varying(50),
			ae character varying(40),
			group1 character varying(40),
			start1 timestamp,
			end1 timestamp,
			type1 character varying(40),
			gross numeric,
			disc numeric,
			comm numeric,
			enter_date timestamp,
			budget_spot numeric,
			bundling numeric,
			cashback_amount numeric,
			total_invoice numeric,
			"cost" numeric,
			nett numeric
		)
	);
begin
	CREATE TEMP TABLE temp_row_data_recon_sales(
		"month" integer,
		"year" integer,
--		contract text,
		contract character varying(255),
		ref_po_num character varying(50),
		camp character varying(20),
		order_no character varying(100),
		agency character varying(60),
		advertiser character varying(40),
		brand character varying(50),
		ae character varying(40),
		group1 character varying(40),
		start1 timestamp,
		end1 timestamp,
		type1 character varying(40),
		gross numeric,
		disc numeric,
		comm numeric,
		enter_date timestamp,
		budget_spot numeric,
		bundling numeric,
		cashback_amount numeric,
		total_invoice numeric,
		"cost" numeric,
		nett numeric
	);
	create index temp_row_data_recon_sales_idx1 on temp_row_data_recon_sales(contract);
	analyze temp_row_data_recon_sales;
	
	OPEN c_data;
	LOOP
      	FETCH c_data INTO rowdata;
      	IF NOT FOUND THEN 
     		EXIT;
		END IF;
      	/* process the result row */
		insert into temp_row_data_recon_sales values(
			rowdata."month",
			rowdata."year",
			rowdata.contract,
			rowdata.ref_po_num,
			rowdata.camp,
			rowdata.order_no,
			rowdata.agency,
			rowdata.advertiser,
			rowdata.brand,
			rowdata.ae,
			rowdata.group1,
			rowdata.start1,
			rowdata.end1,
			rowdata.type1,
			rowdata.gross,
			rowdata.disc,
			rowdata.comm,
			rowdata.enter_date,
			rowdata.budget_spot,
			rowdata.bundling,
			rowdata.cashback_amount,
			rowdata.total_invoice,
			rowdata."cost",
			rowdata.nett
		);
   	END LOOP;
   
   	CREATE TEMP TABLE temp_row_data_recon_sales_sums AS
		select 
			contract,
			sum("cost") as "cost",
			sum(nett) as nett
		from temp_row_data_recon_sales
	   	group by contract
   	;
   
   	insert into dev.row_data_recon_sales_temp(
		"month",
		"year", 
		ponumber, 
		refponumber,
		contract,
		packageno,
		agencyname,
		client,
		product,
		ae,
		group1,
		startdate,
		enddate,
		"type",
		gross,
		confirmed,
		confirmedpermil,
		makegood,
		makegoodpermil,
		booking,
		bookingpermil,
		discount,
		commision,
		dateenter,
		budgetvalue,
		budgetbooking,
		totalcontract,
		budgetnett,
		budgetpermil,
		varconfirmedminusbudgetnett,
		varbookingminusbudgetnett,
		bundling,
		cashback,
		nettminuscashbackminusbundling,
		confirmedminuscashbackminusbundling,
		totalinvoice,
		isapprovedtraffic,
		isapprovedaccounting
   	)
   	select 
   		"month",
   		"year",
   		contract,
   		ref_po_num,
   		camp,
		order_no,
		agency,
		advertiser,
		brand,
		ae,
		group1,
		start1,
		end1,
		type1,
		gross,
		(select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract),
		((select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract)/1000000),
		0,
		0,
		(select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract),
		((select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract)/1000000),
		disc,
		comm,
		enter_date,
		0,
		(select "cost" from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract),
		budget_spot,
		(select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract),
		((select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract)/1000000),
		(tmp.nett - (select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract)),
		((select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract) - (select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract)),
		bundling,
		cashback_amount,
		(tmp.nett - tmp.cashback_amount - tmp.bundling),
		((select nett from temp_row_data_recon_sales_sums sums where sums.contract = tmp.contract) - tmp.cashback_amount - tmp.bundling),
		total_invoice,
		false,
		false
   	
   	from
   		temp_row_data_recon_sales tmp
   	;
end;
$function$
;


select process_rowdata_gen21_v3('08', '2022');

-------------------------------------------------
-- dev.row_data_recon_sales definition

-- Drop table

-- DROP TABLE dev.row_data_recon_sales;
--delete from dev.row_data_recon_sales_temp;

CREATE TABLE dev.row_data_recon_sales_temp (
	rowdatareconsalesid int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"month" int4 NOT NULL,
	"year" int4 NOT NULL,
	ponumber varchar(255) NULL,
	refponumber varchar(255) NULL,
	poclose varchar(1) NULL,
	contract varchar(255) NULL,
	packageno varchar(255) NULL,
	agencyname varchar(500) NULL,
	client varchar(500) NULL,
	product varchar(500) NULL,
	ae varchar(255) NULL,
	group1 varchar(255) NULL,
	startdate timestamp NOT NULL,
	enddate timestamp NOT NULL,
	"type" varchar(255) NULL,
	gross numeric NOT NULL,
	confirmed numeric NOT NULL,
	confirmedpermil numeric NOT NULL,
	makegood numeric NOT NULL,
	makegoodpermil numeric NOT NULL,
	booking numeric NOT NULL,
	bookingpermil numeric NOT NULL,
	discount numeric NOT NULL,
	commision numeric NOT NULL,
	dateenter timestamp NOT NULL,
	budgetvalue numeric NOT NULL,
	budgetbooking numeric NOT NULL,
	totalcontract numeric NOT NULL,
	budgetnett numeric NOT NULL,
	budgetpermil numeric NOT NULL,
	varconfirmedminusbudgetnett numeric NOT NULL,
	varbookingminusbudgetnett numeric NOT NULL,
	bundling numeric NOT NULL,
	cashback numeric NOT NULL,
	nettminuscashbackminusbundling numeric NOT NULL,
	confirmedminuscashbackminusbundling numeric NOT NULL,
	totalinvoice numeric NOT NULL,
	transfertonextmonth numeric NOT NULL,
	transferfromprevmonth numeric NOT NULL,
	realinvoice numeric NOT NULL,
	remark text NULL,
	notes text NULL,
	isapprovedtraffic bool NOT NULL,
	approved_traffic_by jsonb NULL,
	approved_traffic_date timestamp NULL,
	isapprovedaccounting bool NOT NULL,
	approved_accounting_by jsonb NULL,
	approved_accounting_date timestamp NULL,
	CONSTRAINT pk_row_data_recon_sales_temp PRIMARY KEY (rowdatareconsalesid)
);

----------------------------
select count(1)
FROM 
	gen21.tt_mo1                  		TM1
	join gen21.mg_channel         		MCN 	on	TM1.channel_code = MCN.channel_code
	join gen21.st_reservations    		SR1 	on	SR1.ROW_ID = TM1.ROW_ID_RES	
	join gen21.st_reservation_matrix1 	SRM1 	on 	SRM1.ROW_ID = TM1.ROW_ID_MATRIX1
	left join gen21.mp_film           	MF		on 	TM1.film_poc = MF.film_poc 
												and TM1.row_id_poc = MF.row_id
	left join gen21.tp_cbs_dps1       	TCD1	on	TM1.row_id_slot = TCD1.row_id
	left join gen21.mt_prod1          	MP1		on	TM1.prod_code = MP1.prod_code
												and TM1.prod_version = MP1.prod_version
	left join gen21.ST_PKG_INT_HDR   	SPKG	on	SR1.rid_pkg_ext = SPKG.row_id			
WHERE     
	TO_CHAR (TM1.MO_BOOK_DATE, 'mm') = '08'/*:as_month*/				
	AND TO_CHAR (TM1.MO_BOOK_DATE, 'yyyy') = '2022'/*:as_year*/				
	AND TM1.channel_code = 'TV7'/*:as_channel*/				
	AND TM1.tx_code = 'INA'/*:as_tx*/
	AND TM1.MO_BOOK_STATUS <> '5';
----------------------------
analyze gen21.tt_mo1;
analyze gen21.mg_channel;
analyze gen21.st_reservations;
analyze gen21.st_reservation_matrix1;
analyze gen21.mp_film;
analyze gen21.tp_cbs_dps1;
analyze gen21.mt_prod1;
analyze gen21.ST_PKG_INT_HDR;

select count(1) from gen21.tt_mo1;